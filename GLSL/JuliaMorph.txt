vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord ) {	
    
	vec2 uv = fragCoord.xy / iResolution.xy;
    uv = uv*2.0 - 1.0;
    uv *= 0.7+0.3*sin(iTime*0.7354);
    uv.x *= iResolution.x / iResolution.y;
    uv += vec2(0.4*sin(iTime*0.246), 0.4*sin(iTime*0.365));
    float theta = iTime*0.132;
    mat2 rot = mat2 (cos(theta), sin(theta), -sin(theta), cos(theta));
    uv *= rot;
    
    vec2 z = uv;
    vec2 c = vec2(-0.73+0.05*cos(1.2434*iTime+0.3),0.3+0.1*sin(0.543*iTime+0.9));
    
    float iterations = -1.0;;
    for (float i = 0.0; i < 200.0; i++) {
        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;
        if (dot(z,z) > 256.0) {
            iterations = i;
            break;
        }
    }
    
    iterations = iterations + 2.0 - log(log(length(z)))/log(2.0);
    
    float hue = pow(iterations/50.0,0.4+0.2*sin(0.324*iTime));
    hue += iTime*0.2454;
    
	fragColor = vec4(hsv2rgb(vec3(hue,1.0,1.0)) ,1.0);
    
    if (iterations < 0.0) fragColor = vec4(vec3(0.0),1.0);
    
}
